version: "3"

services:
  postgres:
    image: "postgres:latest"
    ports:
      - 5432:5432
    env_file:
      - ./conf/docker/postgres.env
    volumes:
      - ./var/data/:/var/lib/postgresql/data/

  adminer:
    image: "adminer:latest"
    ports:
      - 8082:8080
    labels:
      - traefik.enable=true
      # - traefik.http.routers.adminer.entrypoints=web
      - traefik.http.routers.adminer.rule=Host(`localhost`) && PathPrefix(`/adminer`)
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    links:
      - postgres

  swagger-ui:
    image: "swaggerapi/swagger-ui"
    ports:
      - 8088:8080
    labels:
      - traefik.enable=true
      # - traefik.http.routers.swagger-ui.entrypoints=web
      - traefik.http.routers.swagger-ui.rule=Host(`localhost`) && PathPrefix(`/swagger/`)
      # - traefik.http.middlewares.watchtower-service.stripprefix.prefixes=/swagger
      - traefik.http.services.swagger-ui.loadbalancer.server.port=8080
    volumes:
      - ./service/spec/http:/usr/share/nginx/html/swagger # our api.yml now available in internal container folder
    env_file:
      - ./conf/docker/swagger.env

  watchtower-app:
    # image: "watchtower-app:latest"
    build: "./client"
    ports:
      - 8085:3000
    labels:
      - traefik.enable=true
      # - traefik.http.routers.watchtower-app.entrypoints=web
      - traefik.http.routers.watchtower-app.rule=Host(`localhost`) && PathPrefix(`/test`)
      - traefik.http.services.watchtower-app.loadbalancer.server.port=8080
    env_file:
      - ./conf/docker/watchtower-app.env
      - ./conf/docker/secrets.env

  watchtower-service:
    build: "./service"
    env_file:
      - ./conf/docker/watchtower-service.env
      - ./conf/docker/secrets.env
    ports:
      - 8001:8000
    labels:
      - traefik.enable=true
      - traefik.http.routers.watchtower-service.rule=Host(`localhost`) && PathPrefix(`/api/v1`)
      # - traefik.http.middlewares.watchtower-service.stripprefix.prefixes=/api/v1
      - traefik.http.services.watchtower-service.loadbalancer.server.port=8080
    depends_on:
      - postgres

  reverse-proxy:
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker
    ports:
      # The HTTP port
      - "8080:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8081:8080"
    labels:
      - traefik.enable=false
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - watchtower-service
      - watchtower-app
