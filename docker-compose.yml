version: "3"

services:
  postgres:
    image: "postgres:latest"
    ports:
      - 5432:5432
    labels:
      - traefik.enable=true
    env_file:
      - ./conf/docker/postgres.env
    volumes:
      - ./var/data/:/var/lib/postgresql/data/

  adminer:
    image: "adminer:latest"
    ports:
      - 8082:8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.rule=Host(`adminer.watchtower.local`)
      - traefik.port=8082
    links:
      - postgres

  swagger-ui:
    image: "swaggerapi/swagger-ui"
    ports:
      - 8088:8080
    labels:
      # Can't access from traefik network, use `http://localhost:8088` instead
      # https://gist.github.com/syntaqx/5494829d23fc5cf3619cb07e66cdcc9e
      - traefik.enable=true
      - traefik.http.routers.docs.rule=Host(`docs.watchtower.local`)
      - traefik.port=8088
    volumes:
      - ./service/spec/http:/usr/share/nginx/html/swagger # our api.yml now available in internal container folder
    env_file:
      - ./conf/docker/swagger.env

  watchtower-app:
    # image: "watchtower-app:latest"
    build: "./client"
    ports:
      - 8085:3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`app.watchtower.local`)
      - traefik.port=8085
    env_file:
      - ./conf/docker/watchtower-app.env
      - ./conf/docker/secrets.env

  watchtower-service:
    build: "./service"
    env_file:
      - ./conf/docker/watchtower-service.env
      - ./conf/docker/secrets.env
    ports:
      - 8001:8000
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.watchtower.local`)
      - traefik.port=8001
    depends_on:
      - postgres

  # https://www.digitalocean.com/community/tutorials/how-to-use-traefik-v2-as-a-reverse-proxy-for-docker-containers-on-ubuntu-20-04
  reverse-proxy:
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    labels:
      - traefik.http.routers.reverse-proxy.rule=Host(`traefik.watchtower.local`)
      - traefik.http.routers.reverse-proxy.service=api@internal
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - watchtower-service
      - watchtower-app
